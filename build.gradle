buildscript {
    ext {
        kotlinVersion = '1.2.31'
        springBootVersion = '2.0.1.RELEASE'
        awaitilityVersion = '3.1.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.pivotal.pal.data'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}


ext {
    springCloudVersion = 'Finchley.M9'
}

ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '5.1.1'
ext.junitPlatformVersion = '1.1.1'
ext.junitJupiterVersion  = '5.1.1'

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-cassandra-reactive')
    compile('org.springframework.boot:spring-boot-starter-data-redis-reactive')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile('org.apache.kafka:kafka-streams:1.0.1')
    compile('org.springframework.cloud:spring-cloud-stream-binder-kafka')
    compile('org.springframework.cloud:spring-cloud-stream-binder-kafka-streams')
    compile('org.springframework.cloud:spring-cloud-stream-reactive')
    compile('org.springframework.kafka:spring-kafka')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")

    runtime('org.springframework.boot:spring-boot-devtools')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
    testCompile('org.springframework.cloud:spring-cloud-stream-test-support')
    testCompile('org.awaitility:awaitility')

    // JUnit Jupiter API and TestEngine implementation
    testCompile('org.junit.jupiter:junit-jupiter-api')
    testRuntime('org.junit.jupiter:junit-jupiter-engine')

    testCompile('junit:junit')
    testRuntime('org.junit.vintage:junit-vintage-engine') {
        because 'allows JUnit 3 and JUnit 4 tests to run'
    }

    testRuntime('org.junit.platform:junit-platform-launcher') {
        because 'allows tests to run from IDEs that bundle older version of launcher'
    }
}

dependencies {
    compile "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"

    constraints {
        compile "org.awaitility:awaitility:${awaitilityVersion}"
        compile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
        compile "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
        compile "org.junit.vintage:junit-vintage-engine:${junitVintageVersion}"
        compile "org.junit.platform:junit-platform-launcher:${junitPlatformVersion}"
    }
}
